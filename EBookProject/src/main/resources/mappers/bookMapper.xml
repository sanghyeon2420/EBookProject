<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 다른 mapper와 중복되지 않도록 네임 스페이스 기재 -->
<mapper namespace="book">
	<select id="bookcategory" resultType="com.example.EBookProject.model.dto.BookcategoryDTO">
		select * from book_category
	</select>
	
	<!-- 도서목록 조회 -->
	<select id="list" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where category_no=#{category_no} order by ebook_no desc
	</select>
	
	<!-- 도서번호로 책 조회 -->
	<select id="bookdetail" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where ebook_no=#{ebook_no}
	</select>
	
	<!-- 도서 번호로 콘텐츠 조회 -->
	<select id="contentdetail" resultType="com.example.EBookProject.model.dto.ContentDTO">
		select * from content where ebook_no=#{ebook_no} order by contentlist desc
	</select>
	
	<!-- 도서번호 최대값으로 새로 들어온 작품 조회 -->
	<select id="newbook" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where ebook_no between (select max(ebook_no)-5 from bookinfo) and (select max(ebook_no) from bookinfo)
	</select>
	
	<!-- 랭킹 리스트 출력 -->
	<select id="ranklist" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo order by book_get desc
	</select>
	
	<!-- 로맨스 책 불러오기 -->
	<select id="romancebook" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where category_no=3
	</select>
	
	<!-- 도서별 랭크순위 불러오기 -->
	<select id="bookrank" resultType="int">
		 select rank from (SELECT RANK() OVER(ORDER BY a.book_get desc) rank, a.*
  		FROM bookinfo a
 		ORDER BY a.book_get desc)
 		where ebook_no=#{ebook_no}
	</select>
	
	<!-- 작가번호로 책 조회 -->
	<select id="writerbook" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where writer_no=#{writer_no}
	</select>
	
	<!-- 책 조회수 증가 -->
	<update id="bookhits">
		update bookinfo set book_hits= book_hits + 1 where ebook_no=#{ebook_no}
	</update>
	
	<!-- 헤더 책 검색
	<select id="search" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where w_name like '%${keyword}%' or b_name like '%${keyword}%'
	</select> -->
	
	<!-- 검색  -->
	<select id="searchbook" resultType="com.example.EBookProject.model.dto.BookDTO">
		select * from bookinfo where b_name like '%${keyword}%'
	</select>

	<!-- 도서목록 출력 -->
	<select id="booklist" resultType="com.example.EBookProject.model.dto.BookDTO">
	select * from bookinfo order by ebook_no
	</select>
	
	<!-- 책 내용 개수 출력 -->
	<select id="contentCount" resultType="int">
	select count(*) from content where ebook_no=#{ebook_no}
	</select>
	
	<select id="contentName" resultType="String">
	 select content_name from content where ebook_no=#{ebook_no} and contentlist=#{contentlist}
	</select>	

</mapper>